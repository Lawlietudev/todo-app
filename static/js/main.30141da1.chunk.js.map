{"version":3,"sources":["Components/TodoForm.jsx","Components/Todo.jsx","Components/TodoList.jsx","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","handleChange","e","target","className","onSubmit","preventDefault","id","Math","floor","random","text","type","name","placeholder","onChange","ref","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","todoId","newValue","prev","item","App","ReactDOM","render","document","getElementById"],"mappings":"+MA2DeA,EAzDE,SAAAC,GACf,MAA0BC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAAnE,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAWC,iBAAO,MAExBC,qBAAU,WACRF,EAASG,QAAQC,WAGnB,IAAMC,EAAe,SAAAC,GACnBP,EAASO,EAAEC,OAAOV,QAcpB,OACE,sBAAMW,UAAU,YAAYC,SAZT,SAAAH,GACnBA,EAAEI,iBAEFhB,EAAMe,SAAS,CACbE,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMjB,IAGRC,EAAS,KAIT,SACGL,EAAME,KACL,qCACE,uBACEY,UAAU,kBACVQ,KAAK,OACLC,KAAK,OACLpB,MAAOC,EACPoB,YAAY,2FACZC,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,gBAAlB,wEAGF,qCACE,uBACEA,UAAU,aACVQ,KAAK,OACLC,KAAK,OACLpB,MAAOC,EACPoB,YAAY,2FACZC,SAAUd,EACVe,IAAKpB,IAEP,wBAAQQ,UAAU,WAAlB,6F,eCHKa,EA5CF,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC/C,EAAwB9B,mBAAS,CAC/BgB,GAAI,KACJd,MAAO,KAFT,mBAAOD,EAAP,KAAa8B,EAAb,KAaA,OAAI9B,EAAKe,GACA,cAAC,EAAD,CAAUf,KAAMA,EAAMa,SATV,SAAAZ,GACnB4B,EAAW7B,EAAKe,GAAId,GACpB6B,EAAQ,CACNf,GAAI,KACJd,MAAO,QAQJyB,EAAMK,KAAI,SAACC,EAAMC,GACtB,OACE,sBACErB,UAAWoB,EAAKE,WAAa,oBAAsB,WADrD,UAIE,qBAAmBC,QAAS,kBAAMR,EAAaK,EAAKjB,KAApD,SACGiB,EAAKb,MADEa,EAAKjB,IAGf,sBAAKH,UAAU,QAAf,UACE,cAAC,IAAD,CACEuB,QAAS,WACPP,EAAWI,EAAKjB,KAElBH,UAAU,gBAEZ,cAAC,IAAD,CACEuB,QAAS,kBAAML,EAAQ,CAAEf,GAAIiB,EAAKjB,GAAId,MAAO+B,EAAKb,QAClDP,UAAU,mBAdTqB,OC4BEG,EAnDE,WACf,MAA0BrC,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcW,EAAd,KAoCA,OACE,gCACE,sIACA,cAAC,EAAD,CAAUxB,SArCE,SAAAmB,GACd,GAAKA,EAAKb,OAAQ,QAAQmB,KAAKN,EAAKb,MAApC,CAIA,IAAMoB,EAAQ,CAAIP,GAAJ,mBAAaN,IAE3BW,EAASE,OA+BP,cAAC,EAAD,CACEb,MAAOA,EACPC,aAhBe,SAAAZ,GACnB,IAAIyB,EAAed,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASG,IAULZ,WAvBa,SAAAb,GACjB,IAAM0B,EAAY,YAAIf,GAAOgB,QAAO,SAAAV,GAAI,OAAIA,EAAKjB,KAAOA,KAExDsB,EAASI,IAqBLZ,WAhCa,SAACc,EAAQC,GACrBA,EAASzB,OAAQ,QAAQmB,KAAKM,EAASzB,OAI5CkB,GAAS,SAAAQ,GAAI,OAAIA,EAAKd,KAAI,SAAAe,GAAI,OAAKA,EAAK/B,KAAO4B,EAASC,EAAWE,eCVxDC,MARf,WACE,OACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,EAAD,OCHNoC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.30141da1.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nconst TodoForm = props => {\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input,\n    });\n\n    setInput(\"\");\n  };\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      {props.edit ? (\n        <>\n          <input\n            className=\"todo-input edit\"\n            type=\"text\"\n            name=\"text\"\n            value={input}\n            placeholder=\"قم بكتابة تعديلك..\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-btn edit\">تم التعديل</button>\n        </>\n      ) : (\n        <>\n          <input\n            className=\"todo-input\"\n            type=\"text\"\n            name=\"text\"\n            value={input}\n            placeholder=\"قم بإضافة المهمة..\"\n            onChange={handleChange}\n            ref={inputRef}\n          />\n          <button className=\"todo-btn\">إضافة للقائمة</button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import { useState } from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport { RiCloseCircleLine } from \"react-icons/ri\";\nimport { TiEdit } from \"react-icons/ti\";\n\nconst Todo = ({ todos, completeTodo, removeTodo, updateTodo }) => {\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\",\n  });\n\n  const submitUpdate = value => {\n    updateTodo(edit.id, value);\n    setEdit({\n      id: null,\n      value: \"\",\n    });\n  };\n\n  if (edit.id) {\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />;\n  }\n\n  return todos.map((todo, index) => {\n    return (\n      <div\n        className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"}\n        key={index}\n      >\n        <div key={todo.id} onClick={() => completeTodo(todo.id)}>\n          {todo.text}\n        </div>\n        <div className=\"icons\">\n          <RiCloseCircleLine\n            onClick={() => {\n              removeTodo(todo.id);\n            }}\n            className=\"delete-icon\"\n          />\n          <TiEdit\n            onClick={() => setEdit({ id: todo.id, value: todo.text })}\n            className=\"edit-icon\"\n          />\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Todo;\n","import { useState } from \"react\";\nimport Todo from \"./Todo\";\nimport TodoForm from \"./TodoForm\";\n\nconst TodoList = () => {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removeArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removeArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1>ما هي خٌطتك لِليوم ؟</h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./Components/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}